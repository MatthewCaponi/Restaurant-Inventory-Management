#include "Database.h"
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Constructors
Database::Database()
{
	
}

Database::Database(const string &newDatabaseID)
{
	databaseID = newDatabaseID;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Setters
void Database::setDatabaseID(const string &newDatabaseID)
{
	databaseID = newDatabaseID;
}

void Database::setData(const list<Data*> &newData)
{
	data = newData;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Getters
string Database::getDatabaseID() const
{
	return databaseID;
}

list<Data*> Database::getData() const
{
	return data;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Helpers
ostream& operator<<(ostream& out, const Database &d)
{
	out << "Database: " << d.databaseID << endl;
	int counter = 1;
	for (Data *dataMem : d.data)
	{
		out << counter << ": " << *dataMem << endl;
		++counter;
	}
	return out;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Deconstructors
Database::~Database() {}